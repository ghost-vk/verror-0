{"version":3,"sources":["../../src/parse-args.ts"],"sourcesContent":["import { format } from 'node:util';\n\nfunction isError(e: unknown): e is Error {\n  if (!e) return false;\n  return e instanceof Error;\n}\n\ntype Args = {\n  argv: unknown[];\n};\n\nexport function parseArgs(args: Args) {\n  let argv: unknown[];\n\n  if (typeof args !== 'object' || args === null || !('argv' in args)) {\n    throw new Error('args should be object');\n  }\n\n  if (!Array.isArray(args.argv)) {\n    throw new Error('argv should be array');\n  }\n\n  argv = args.argv;\n\n  const options: {\n    cause?: unknown;\n  } = {};\n  let sprintf_args: unknown[] = [];\n  // Определим какая форма вызова используется.\n  if (argv.length === 0) {\n    // Тут ничего делать не нужно.\n  } else if (isError(argv[0])) {\n    options.cause = argv[0];\n    // Слайсим все элементы как аргументы sprintf после причины.\n    sprintf_args = argv.slice(1);\n  } else if (typeof argv[0] === 'object' && argv[0] !== null) {\n    for (const k in argv[0]) {\n      options[k] = argv[0][k];\n    }\n    sprintf_args = argv.slice(1);\n  } else {\n    if (typeof argv[0] !== 'string') {\n      throw new Error('first argument to VError or WError constructor must be a string, object, or Error');\n    }\n    // В случае когда передана строка - все аргументы идут для sprintf.\n    sprintf_args = argv;\n  }\n\n  let shortmessage: string;\n  if (sprintf_args.length === 0) {\n    shortmessage = '';\n  } else {\n    // 1й - message, остальные - параметры.\n    shortmessage = format(...sprintf_args);\n  }\n\n  return {\n    options,\n    shortmessage\n  };\n}\n"],"names":["format","isError","e","Error","parseArgs","args","argv","Array","isArray","options","sprintf_args","length","cause","slice","k","shortmessage"],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEnC,SAASC,QAAQC,CAAU;IACzB,IAAI,CAACA,GAAG,OAAO;IACf,OAAOA,aAAaC;AACtB;AAMA,OAAO,SAASC,UAAUC,IAAU;IAClC,IAAIC;IAEJ,IAAI,OAAOD,SAAS,YAAYA,SAAS,QAAQ,CAAE,CAAA,UAAUA,IAAG,GAAI;QAClE,MAAM,IAAIF,MAAM;IAClB;IAEA,IAAI,CAACI,MAAMC,OAAO,CAACH,KAAKC,IAAI,GAAG;QAC7B,MAAM,IAAIH,MAAM;IAClB;IAEAG,OAAOD,KAAKC,IAAI;IAEhB,MAAMG,UAEF,CAAC;IACL,IAAIC,eAA0B,EAAE;IAChC,6CAA6C;IAC7C,IAAIJ,KAAKK,MAAM,KAAK,GAAG;IACrB,8BAA8B;IAChC,OAAO,IAAIV,QAAQK,IAAI,CAAC,EAAE,GAAG;QAC3BG,QAAQG,KAAK,GAAGN,IAAI,CAAC,EAAE;QACvB,4DAA4D;QAC5DI,eAAeJ,KAAKO,KAAK,CAAC;IAC5B,OAAO,IAAI,OAAOP,IAAI,CAAC,EAAE,KAAK,YAAYA,IAAI,CAAC,EAAE,KAAK,MAAM;QAC1D,IAAK,MAAMQ,KAAKR,IAAI,CAAC,EAAE,CAAE;YACvBG,OAAO,CAACK,EAAE,GAAGR,IAAI,CAAC,EAAE,CAACQ,EAAE;QACzB;QACAJ,eAAeJ,KAAKO,KAAK,CAAC;IAC5B,OAAO;QACL,IAAI,OAAOP,IAAI,CAAC,EAAE,KAAK,UAAU;YAC/B,MAAM,IAAIH,MAAM;QAClB;QACA,mEAAmE;QACnEO,eAAeJ;IACjB;IAEA,IAAIS;IACJ,IAAIL,aAAaC,MAAM,KAAK,GAAG;QAC7BI,eAAe;IACjB,OAAO;QACL,uCAAuC;QACvCA,eAAef,UAAUU;IAC3B;IAEA,OAAO;QACLD;QACAM;IACF;AACF"}